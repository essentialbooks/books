{
  "ID": "abb984fe-c0d0-4d74-b2d4-94ed3206d1bc",
  "Root": {
    "alive": true,
    "content": [
      "4acbd771-dc67-4445-8fe2-748c836b3f66",
      "25524a9e-c235-4175-b34a-a163ec4a4602",
      "7b10b02c-0556-423e-a646-f0a57e94ea79",
      "35776a32-5c06-4d62-a99e-0138bfce268d",
      "71941809-7ab3-4209-97b6-b6eec6d7b1a5",
      "455e232b-6b01-40d0-9f65-5269cf695638",
      "765f586e-aea2-41a0-bb8f-f3ea4b8ceca1",
      "18114098-3d55-4345-a79f-2a51dad6f7d1",
      "e482d6b6-2773-44f5-8d7c-c13f6ad5b3bc",
      "3532030f-4001-46a8-ab2e-3bddff3b612a",
      "43910ec0-fdd2-453c-88ce-0143bbd98b07",
      "f3b9a179-5896-475a-9dc5-2717f558270e",
      "5bde997a-d164-4ed2-b210-56b2026e517c",
      "edc040b0-4227-44d5-b98e-630be84855e2",
      "498d00b3-a2b7-40cf-b2ea-88147c9375a1",
      "aca42c58-f30e-47dc-ade8-5456b7d4472e",
      "98f9a2ab-91b4-486c-b28e-f315fd515dd8",
      "27caa52a-cb5f-479e-b975-3d59cbf50e84",
      "e568912b-7c6e-4538-93bd-e3d4020c412a",
      "82e5dda9-853f-4f67-8cec-d8fa9396f434",
      "df2af867-fe45-4cd5-ae95-9f48fc222d3b",
      "2b7d689e-8660-475d-b415-eb1fc39e98b3",
      "345261c3-b96f-4135-9491-68a8fbb248db",
      "0b6a44de-eff1-4aa3-8990-a26bb1bdd292",
      "0fcb6b3c-2711-4a01-898b-639176c041db",
      "3537bf2b-9771-4e0f-bcca-8fd85d365ebe",
      "3f62e69f-854a-4af4-aee7-963b2d8f41d1",
      "b6b3761f-eb08-4238-9196-453135fdd559",
      "d7aa8ef8-c5df-4298-b6dc-c0761d05825b"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1532156124245,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "abb984fe-c0d0-4d74-b2d4-94ed3206d1bc",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1553594160000,
    "parent_id": "2cab1ed2-b7a4-4584-b56b-0d3ca9b80185",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "CSV"
        ]
      ]
    },
    "type": "page",
    "version": 71,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532208224329,
        "id": "4acbd771-dc67-4445-8fe2-748c836b3f66",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532208231114,
        "parent_id": "abb984fe-c0d0-4d74-b2d4-94ed3206d1bc",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "$Id: 191"
            ]
          ]
        },
        "type": "text",
        "version": 12,
        "inline_content": [
          {
            "Text": "$Id: 191"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532208225881,
        "id": "25524a9e-c235-4175-b34a-a163ec4a4602",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532208230130,
        "parent_id": "abb984fe-c0d0-4d74-b2d4-94ed3206d1bc",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "$SOId: 5818"
            ]
          ]
        },
        "type": "text",
        "version": 12,
        "inline_content": [
          {
            "Text": "$SOId: 5818"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532208227593,
        "id": "7b10b02c-0556-423e-a646-f0a57e94ea79",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532208228274,
        "parent_id": "abb984fe-c0d0-4d74-b2d4-94ed3206d1bc",
        "parent_table": "block",
        "type": "text",
        "version": 10
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532156124240,
        "id": "35776a32-5c06-4d62-a99e-0138bfce268d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532156124240,
        "parent_id": "abb984fe-c0d0-4d74-b2d4-94ed3206d1bc",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Package "
            ],
            [
              "encoding/csv",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "https://golang.org/pkg/encoding/csv/"
                ]
              ]
            ],
            [
              " in standard library provides functionality for reading and writing CSV files."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Package "
          },
          {
            "Text": "encoding/csv",
            "AttrFlags": 2,
            "Link": "https://golang.org/pkg/encoding/csv/"
          },
          {
            "Text": " in standard library provides functionality for reading and writing CSV files."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532156124240,
        "id": "71941809-7ab3-4209-97b6-b6eec6d7b1a5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532156124240,
        "parent_id": "abb984fe-c0d0-4d74-b2d4-94ed3206d1bc",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Reading records from CSV file"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Reading records from CSV file"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532156124241,
        "id": "455e232b-6b01-40d0-9f65-5269cf695638",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532156124241,
        "parent_id": "abb984fe-c0d0-4d74-b2d4-94ed3206d1bc",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Let’s read stock quotes from a CSV file:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Let’s read stock quotes from a CSV file:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1538796582940,
        "id": "765f586e-aea2-41a0-bb8f-f3ea4b8ceca1",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1538796597497,
        "parent_id": "abb984fe-c0d0-4d74-b2d4-94ed3206d1bc",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Plain Text"
            ]
          ],
          "title": [
            [
              "date,open,high,low,close,volume,Name\n2013-02-08,15.07,15.12,14.63,14.75,8407500,AAL\n2013-02-11,14.89,15.01,14.26,14.46,8882000,AAL\n2013-02-12,14.45,14.51,14.1,14.27,8126000,AAL\n2013-02-13,14.3,14.94,14.25,14.66,10259500,AAL"
            ]
          ]
        },
        "type": "code",
        "version": 23,
        "code": "date,open,high,low,close,volume,Name\n2013-02-08,15.07,15.12,14.63,14.75,8407500,AAL\n2013-02-11,14.89,15.01,14.26,14.46,8882000,AAL\n2013-02-12,14.45,14.51,14.1,14.27,8126000,AAL\n2013-02-13,14.3,14.94,14.25,14.66,10259500,AAL",
        "code_language": "Plain Text"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552285319981,
        "id": "18114098-3d55-4345-a79f-2a51dad6f7d1",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1552285320000,
        "parent_id": "abb984fe-c0d0-4d74-b2d4-94ed3206d1bc",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Go"
            ]
          ],
          "title": [
            [
              "// no playground\npackage main\n\nimport (\n\t\"encoding/csv\"\n\t\"fmt\"\n\t\"io\"\n\t\"log\"\n\t\"os\"\n)\n\nfunc main() {\n\t// :show start\n\tf, err := os.Open(\"stocks.csv\")\n\tif err != nil {\n\t\tlog.Fatalf(\"os.Open() failed with '%s'\\n\", err)\n\t}\n\tdefer f.Close()\n\n\tr := csv.NewReader(f)\n\tvar record []string\n\tnRecords := 0\n\tfor {\n\t\trecord, err = r.Read()\n\t\tif err != nil {\n\t\t\tif err == io.EOF {\n\t\t\t\terr = nil\n\t\t\t}\n\t\t\tbreak\n\t\t}\n\t\tnRecords++\n\t\tif nRecords \u003c 5 {\n\t\t\tfmt.Printf(\"Record: %#v\\n\", record)\n\t\t}\n\t}\n\tif err != nil {\n\t\tlog.Fatalf(\"r.Read() failed with '%s'\\n\", err)\n\t}\n\tfmt.Printf(\"Read %d records\\n\", nRecords)\n\t// :show end\n}"
            ]
          ]
        },
        "type": "code",
        "version": 13,
        "code": "// no playground\npackage main\n\nimport (\n\t\"encoding/csv\"\n\t\"fmt\"\n\t\"io\"\n\t\"log\"\n\t\"os\"\n)\n\nfunc main() {\n\t// :show start\n\tf, err := os.Open(\"stocks.csv\")\n\tif err != nil {\n\t\tlog.Fatalf(\"os.Open() failed with '%s'\\n\", err)\n\t}\n\tdefer f.Close()\n\n\tr := csv.NewReader(f)\n\tvar record []string\n\tnRecords := 0\n\tfor {\n\t\trecord, err = r.Read()\n\t\tif err != nil {\n\t\t\tif err == io.EOF {\n\t\t\t\terr = nil\n\t\t\t}\n\t\t\tbreak\n\t\t}\n\t\tnRecords++\n\t\tif nRecords \u003c 5 {\n\t\t\tfmt.Printf(\"Record: %#v\\n\", record)\n\t\t}\n\t}\n\tif err != nil {\n\t\tlog.Fatalf(\"r.Read() failed with '%s'\\n\", err)\n\t}\n\tfmt.Printf(\"Read %d records\\n\", nRecords)\n\t// :show end\n}",
        "code_language": "Go"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532156124242,
        "id": "e482d6b6-2773-44f5-8d7c-c13f6ad5b3bc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532156124242,
        "parent_id": "abb984fe-c0d0-4d74-b2d4-94ed3206d1bc",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "As per Go best practices, CSV reader operates on "
            ],
            [
              "io.Reader",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " interface, which allows it to work on files, network connections, bytes in memory etc."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "As per Go best practices, CSV reader operates on "
          },
          {
            "Text": "io.Reader",
            "AttrFlags": 2
          },
          {
            "Text": " interface, which allows it to work on files, network connections, bytes in memory etc."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532156124242,
        "id": "3532030f-4001-46a8-ab2e-3bddff3b612a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532156124242,
        "parent_id": "abb984fe-c0d0-4d74-b2d4-94ed3206d1bc",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Read()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " method reads one CSV line at a time and returns "
            ],
            [
              "[]string",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " slice with all fields in that line and an error."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Read()",
            "AttrFlags": 2
          },
          {
            "Text": " method reads one CSV line at a time and returns "
          },
          {
            "Text": "[]string",
            "AttrFlags": 2
          },
          {
            "Text": " slice with all fields in that line and an error."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532156124242,
        "id": "43910ec0-fdd2-453c-88ce-0143bbd98b07",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532156124242,
        "parent_id": "abb984fe-c0d0-4d74-b2d4-94ed3206d1bc",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Returning "
            ],
            [
              "io.EOF",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " as an error signifies successfully reaching end of file."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Returning "
          },
          {
            "Text": "io.EOF",
            "AttrFlags": 2
          },
          {
            "Text": " as an error signifies successfully reaching end of file."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532156124243,
        "id": "f3b9a179-5896-475a-9dc5-2717f558270e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532156124243,
        "parent_id": "abb984fe-c0d0-4d74-b2d4-94ed3206d1bc",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Reading all records from CSV file"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Reading all records from CSV file"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532156124243,
        "id": "5bde997a-d164-4ed2-b210-56b2026e517c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532156124243,
        "parent_id": "abb984fe-c0d0-4d74-b2d4-94ed3206d1bc",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Instead of calling "
            ],
            [
              "Read()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " in a loop, we could read all records in one call:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Instead of calling "
          },
          {
            "Text": "Read()",
            "AttrFlags": 2
          },
          {
            "Text": " in a loop, we could read all records in one call:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532156124243,
        "id": "edc040b0-4227-44d5-b98e-630be84855e2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532208164650,
        "parent_id": "abb984fe-c0d0-4d74-b2d4-94ed3206d1bc",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Go"
            ]
          ],
          "title": [
            [
              "r := csv.NewReader(f)\nrecords, err := r.ReadAll()\nif err != nil {\n    log.Fatalf(\"r.ReadAll() failed with '%s'\\n\", err)\n}\n// records is [][]string\nfmt.Printf(\"Read %d records\\n\", len(records))"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "r := csv.NewReader(f)\nrecords, err := r.ReadAll()\nif err != nil {\n    log.Fatalf(\"r.ReadAll() failed with '%s'\\n\", err)\n}\n// records is [][]string\nfmt.Printf(\"Read %d records\\n\", len(records))",
        "code_language": "Go"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532156124243,
        "id": "498d00b3-a2b7-40cf-b2ea-88147c9375a1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532156124243,
        "parent_id": "abb984fe-c0d0-4d74-b2d4-94ed3206d1bc",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This time we don’t have to special-case "
            ],
            [
              "io.EOF",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " as "
            ],
            [
              "ReadAll",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " does that for us."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This time we don’t have to special-case "
          },
          {
            "Text": "io.EOF",
            "AttrFlags": 2
          },
          {
            "Text": " as "
          },
          {
            "Text": "ReadAll",
            "AttrFlags": 2
          },
          {
            "Text": " does that for us."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532156124243,
        "id": "aca42c58-f30e-47dc-ade8-5456b7d4472e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532156124243,
        "parent_id": "abb984fe-c0d0-4d74-b2d4-94ed3206d1bc",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Reading all records at once is simpler but will use more memory, especially for large CSV files."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Reading all records at once is simpler but will use more memory, especially for large CSV files."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532156124244,
        "id": "98f9a2ab-91b4-486c-b28e-f315fd515dd8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532156124244,
        "parent_id": "abb984fe-c0d0-4d74-b2d4-94ed3206d1bc",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Writing records to CSV file"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Writing records to CSV file"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532156124244,
        "id": "27caa52a-cb5f-479e-b975-3d59cbf50e84",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1538796663213,
        "parent_id": "abb984fe-c0d0-4d74-b2d4-94ed3206d1bc",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Let’s now write simplified stock quotes to a CSV file:"
            ]
          ]
        },
        "type": "text",
        "version": 3,
        "inline_content": [
          {
            "Text": "Let’s now write simplified stock quotes to a CSV file:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1552285352295,
        "id": "e568912b-7c6e-4538-93bd-e3d4020c412a",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1553594160000,
        "parent_id": "abb984fe-c0d0-4d74-b2d4-94ed3206d1bc",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Go"
            ]
          ],
          "title": [
            [
              "// :glot\npackage main\n\nimport (\n\t\"encoding/csv\"\n\t\"fmt\"\n\t\"io/ioutil\"\n\t\"log\"\n\t\"os\"\n)\n\n// :show start\nfunc writeCSV() error {\n\tf, err := os.Create(\"stocks_tmp.csv\")\n\tif err != nil {\n\t\treturn err\n\t}\n\n\tw := csv.NewWriter(f)\n\trecords := [][]string{\n\t\t{\"date\", \"price\", \"name\"},\n\t\t{\"2013-02-08\", \"15,07\", \"GOOG\"},\n\t\t{\"2013-02-09\", \"15,09\", \"GOOG\"},\n\t}\n\tfor _, rec := range records {\n\t\terr = w.Write(rec)\n\t\tif err != nil {\n\t\t\tf.Close()\n\t\t\treturn err\n\t\t}\n\t}\n\n\t// csv.Writer might buffer writes for performance so we must\n\t// Flush to ensure all data has been written to underlying\n\t// writer\n\tw.Flush()\n\n\t// Flush doesn't return an error. If it failed to write, we\n\t// can get the error with Error()\n\terr = w.Error()\n\tif err != nil {\n\t\treturn err\n\t}\n\t// Close might also fail due to flushing out buffered writes\n\terr = f.Close()\n\treturn err\n}\n\n// :show end\n\nfunc main() {\n\twriteCSV()\n\td, err := ioutil.ReadFile(\"stocks_tmp.csv\")\n\tif err != nil {\n\t\tlog.Fatalf(\"ioutil.ReadAll() failed with '%s'\\n\", err)\n\t}\n\tfmt.Printf(\"%s\\n\", string(d))\n\tos.Remove(\"stocks_tmp.csv\")\n}"
            ]
          ]
        },
        "type": "code",
        "version": 25,
        "code": "// :glot\npackage main\n\nimport (\n\t\"encoding/csv\"\n\t\"fmt\"\n\t\"io/ioutil\"\n\t\"log\"\n\t\"os\"\n)\n\n// :show start\nfunc writeCSV() error {\n\tf, err := os.Create(\"stocks_tmp.csv\")\n\tif err != nil {\n\t\treturn err\n\t}\n\n\tw := csv.NewWriter(f)\n\trecords := [][]string{\n\t\t{\"date\", \"price\", \"name\"},\n\t\t{\"2013-02-08\", \"15,07\", \"GOOG\"},\n\t\t{\"2013-02-09\", \"15,09\", \"GOOG\"},\n\t}\n\tfor _, rec := range records {\n\t\terr = w.Write(rec)\n\t\tif err != nil {\n\t\t\tf.Close()\n\t\t\treturn err\n\t\t}\n\t}\n\n\t// csv.Writer might buffer writes for performance so we must\n\t// Flush to ensure all data has been written to underlying\n\t// writer\n\tw.Flush()\n\n\t// Flush doesn't return an error. If it failed to write, we\n\t// can get the error with Error()\n\terr = w.Error()\n\tif err != nil {\n\t\treturn err\n\t}\n\t// Close might also fail due to flushing out buffered writes\n\terr = f.Close()\n\treturn err\n}\n\n// :show end\n\nfunc main() {\n\twriteCSV()\n\td, err := ioutil.ReadFile(\"stocks_tmp.csv\")\n\tif err != nil {\n\t\tlog.Fatalf(\"ioutil.ReadAll() failed with '%s'\\n\", err)\n\t}\n\tfmt.Printf(\"%s\\n\", string(d))\n\tos.Remove(\"stocks_tmp.csv\")\n}",
        "code_language": "Go"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532156124244,
        "id": "82e5dda9-853f-4f67-8cec-d8fa9396f434",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532156124244,
        "parent_id": "abb984fe-c0d0-4d74-b2d4-94ed3206d1bc",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Error handling here is not trivial."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Error handling here is not trivial."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532156124244,
        "id": "df2af867-fe45-4cd5-ae95-9f48fc222d3b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532156124244,
        "parent_id": "abb984fe-c0d0-4d74-b2d4-94ed3206d1bc",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "We need to remember to "
            ],
            [
              "Flush()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " at the end of writing, check if "
            ],
            [
              "Flush()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " failed with "
            ],
            [
              "Error()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and also check that "
            ],
            [
              "Close()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " didn’t fail."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "We need to remember to "
          },
          {
            "Text": "Flush()",
            "AttrFlags": 2
          },
          {
            "Text": " at the end of writing, check if "
          },
          {
            "Text": "Flush()",
            "AttrFlags": 2
          },
          {
            "Text": " failed with "
          },
          {
            "Text": "Error()",
            "AttrFlags": 2
          },
          {
            "Text": " and also check that "
          },
          {
            "Text": "Close()",
            "AttrFlags": 2
          },
          {
            "Text": " didn’t fail."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532156124245,
        "id": "2b7d689e-8660-475d-b415-eb1fc39e98b3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532156124245,
        "parent_id": "abb984fe-c0d0-4d74-b2d4-94ed3206d1bc",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The need to check "
            ],
            [
              "Close()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " errors is why we didn’t use a simpler "
            ],
            [
              "defer f.Close()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". Correctness and robustness sometimes require more code."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The need to check "
          },
          {
            "Text": "Close()",
            "AttrFlags": 2
          },
          {
            "Text": " errors is why we didn’t use a simpler "
          },
          {
            "Text": "defer f.Close()",
            "AttrFlags": 2
          },
          {
            "Text": ". Correctness and robustness sometimes require more code."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532156124245,
        "id": "345261c3-b96f-4135-9491-68a8fbb248db",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532156124245,
        "parent_id": "abb984fe-c0d0-4d74-b2d4-94ed3206d1bc",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Nalues that had "
            ],
            [
              ",",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " in them were quoted because comman is used as field separator."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Nalues that had "
          },
          {
            "Text": ",",
            "AttrFlags": 2
          },
          {
            "Text": " in them were quoted because comman is used as field separator."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532156124245,
        "id": "0b6a44de-eff1-4aa3-8990-a26bb1bdd292",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532156124245,
        "parent_id": "abb984fe-c0d0-4d74-b2d4-94ed3206d1bc",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In production code we would also delete the CSV file in case of errors. No need to keep corrupt file around."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In production code we would also delete the CSV file in case of errors. No need to keep corrupt file around."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532156124245,
        "id": "0fcb6b3c-2711-4a01-898b-639176c041db",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532156124245,
        "parent_id": "abb984fe-c0d0-4d74-b2d4-94ed3206d1bc",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Writing all records to CSV file"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Writing all records to CSV file"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532156124245,
        "id": "3537bf2b-9771-4e0f-bcca-8fd85d365ebe",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532156124245,
        "parent_id": "abb984fe-c0d0-4d74-b2d4-94ed3206d1bc",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Just like we can read all records at once, we can write multiple records at once:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Just like we can read all records at once, we can write multiple records at once:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532156124245,
        "id": "3f62e69f-854a-4af4-aee7-963b2d8f41d1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532208168305,
        "parent_id": "abb984fe-c0d0-4d74-b2d4-94ed3206d1bc",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Go"
            ]
          ],
          "title": [
            [
              "w := csv.NewWriter(f)\nerr = w.WriteAll(records)\nif err != nil {\n    f.Close()\n    return err\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "w := csv.NewWriter(f)\nerr = w.WriteAll(records)\nif err != nil {\n    f.Close()\n    return err\n}",
        "code_language": "Go"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532208170735,
        "id": "b6b3761f-eb08-4238-9196-453135fdd559",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532208170735,
        "parent_id": "abb984fe-c0d0-4d74-b2d4-94ed3206d1bc",
        "parent_table": "block",
        "type": "text",
        "version": 4
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532156125208,
        "format": {
          "page_full_width": true,
          "page_small_text": true
        },
        "id": "d7aa8ef8-c5df-4298-b6dc-c0761d05825b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532208213840,
        "parent_id": "abb984fe-c0d0-4d74-b2d4-94ed3206d1bc",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Configuring CSV parsing and writing"
            ]
          ]
        },
        "type": "page",
        "version": 23,
        "title": "Configuring CSV parsing and writing",
        "format_page": {
          "page_cover": "",
          "page_cover_position": 0,
          "page_font": "",
          "page_full_width": true,
          "page_icon": "",
          "page_small_text": true
        }
      }
    ],
    "title": "CSV",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "",
      "version": 51
    }
  ],
  "Tables": null
}