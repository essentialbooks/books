{
  "ID": "1479bc5a-08b6-4dbb-8aa0-e2f5ed17782f",
  "Root": {
    "alive": true,
    "content": [
      "75ca5f82-a39d-4bf4-a4e9-a5180f60f9a2",
      "5c3069e5-8354-4ed3-8f30-5457a5eb09ec",
      "4786c006-7300-415e-8659-6314f72cdf00",
      "21166513-159c-4e1f-8eb6-c67d759dbba8",
      "d55cebc4-29c4-469c-a27f-3bb4ece1aba1",
      "54ade7e8-b6dd-460a-8487-7d2fa88f2396",
      "574bc974-ad70-4f66-8daf-e7bb17821903",
      "886429f5-90f8-4754-bc4e-abfd392c8ecb",
      "be3865ae-1133-4559-b130-d5efe343f29b",
      "ff3089dd-5958-41ca-8622-672a50fd9445",
      "da82b928-bc22-4d7c-9604-9965b1e9892b",
      "9cfcd11b-5e4e-4181-aeaf-644e9c11fea1",
      "b563f216-303d-4fb4-9aa9-3ecd739a750f",
      "7829fb5c-eb1c-4318-96ff-b986b4daeb2e",
      "5144bd95-41ef-446e-885f-a038eaaea95b",
      "4f221ce7-d0d8-4e4b-9afc-aff36aaecd4d",
      "8856257a-8034-4905-9950-3995b37e5dd3",
      "9fb86f62-b5b3-4231-affc-b3758987428f",
      "98780d83-71d2-4258-9534-32fc0c535603",
      "09d19f0b-acdf-4718-a955-658ea5dc2ea5",
      "355831c1-2cdb-4dab-97f5-d5627a0a0398",
      "fd2d1252-6cf3-467c-8843-2235c072061e",
      "8c8ecf7d-fceb-48e8-be51-470cb119126a",
      "9bd56f23-6e25-4667-9486-52b0e714f7b4",
      "c3a0493e-507a-486f-96e7-0f674c8496ef",
      "301d30d2-8d8f-49f7-9f1a-0ae3b66e89bb",
      "45c1061c-2e23-45bc-9b15-cc287d2d51d0",
      "57b3cd2b-d3ae-45f2-9fda-806c7b13d3bc",
      "a9f59ef2-8e5e-4a6c-8461-181871b0c3de",
      "e9130998-17ad-41dc-a018-4b03c454246a",
      "6423a628-7609-42e0-a74c-ccb540ba1240",
      "cf32c942-abcd-4685-a32b-a1ae16dd0b66",
      "cc86ac32-2701-4af0-acd1-e44f6546c43c",
      "4ef2f951-df5f-4c2f-a229-ddb74e372823",
      "d349946b-5cb6-42b5-800b-7c75fe3ac9d0",
      "cc008efe-45c8-4e82-bfe9-dc742e3e9a20",
      "468765d1-44a3-4e87-b913-c7674e66c3a4",
      "408ca6ba-b89f-4e46-8d58-b26a951c12d7",
      "68e0d7e0-4873-427d-90f5-238c034dff66"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1532156109182,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "1479bc5a-08b6-4dbb-8aa0-e2f5ed17782f",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1532237030634,
    "parent_id": "2cab1ed2-b7a4-4584-b56b-0d3ca9b80185",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "JSON"
        ]
      ]
    },
    "type": "page",
    "version": 28,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532207508699,
        "id": "75ca5f82-a39d-4bf4-a4e9-a5180f60f9a2",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532207510586,
        "parent_id": "1479bc5a-08b6-4dbb-8aa0-e2f5ed17782f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "$Id: 182"
            ]
          ]
        },
        "type": "text",
        "version": 12,
        "inline_content": [
          {
            "Text": "$Id: 182"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532207510586,
        "id": "5c3069e5-8354-4ed3-8f30-5457a5eb09ec",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532207513099,
        "parent_id": "1479bc5a-08b6-4dbb-8aa0-e2f5ed17782f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "$SOId: 994"
            ]
          ]
        },
        "type": "text",
        "version": 12,
        "inline_content": [
          {
            "Text": "$SOId: 994"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532207513099,
        "id": "4786c006-7300-415e-8659-6314f72cdf00",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532207513562,
        "parent_id": "1479bc5a-08b6-4dbb-8aa0-e2f5ed17782f",
        "parent_table": "block",
        "type": "text",
        "version": 10
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532156109174,
        "id": "21166513-159c-4e1f-8eb6-c67d759dbba8",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532156109174,
        "parent_id": "1479bc5a-08b6-4dbb-8aa0-e2f5ed17782f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Package "
            ],
            [
              "encoding/json",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "https://golang.org/pkg/encoding/json/"
                ]
              ]
            ],
            [
              " in standard library provides functionality for serializing data as JSON and parsing JSON into data."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Package "
          },
          {
            "Text": "encoding/json",
            "AttrFlags": 2,
            "Link": "https://golang.org/pkg/encoding/json/"
          },
          {
            "Text": " in standard library provides functionality for serializing data as JSON and parsing JSON into data."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532156109174,
        "id": "d55cebc4-29c4-469c-a27f-3bb4ece1aba1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532156109174,
        "parent_id": "1479bc5a-08b6-4dbb-8aa0-e2f5ed17782f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Serialize a struct as JSON"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Serialize a struct as JSON"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532156109174,
        "id": "54ade7e8-b6dd-460a-8487-7d2fa88f2396",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532156109174,
        "parent_id": "1479bc5a-08b6-4dbb-8aa0-e2f5ed17782f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "@file json_serialize.go output sha1:a91894315e1a06003e4862d5fbc12003cfcd20fd goplayground:T6_VXCMeO3r"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "@file json_serialize.go output sha1:a91894315e1a06003e4862d5fbc12003cfcd20fd goplayground:T6_VXCMeO3r"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532156109175,
        "id": "574bc974-ad70-4f66-8daf-e7bb17821903",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1533063417117,
        "parent_id": "1479bc5a-08b6-4dbb-8aa0-e2f5ed17782f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Both "
            ],
            [
              "json.Marshal",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "json.MarshalIndent",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " take "
            ],
            [
              "interface{}",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "https://www.notion.so/kjkpublic/Empty-interface-c3315892508248fdb19b663bf8bff028"
                ]
              ]
            ],
            [
              " as first argument. We can pass any Go value, it’ll be wrapped into "
            ],
            [
              "interface{}",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " with their type."
            ]
          ]
        },
        "type": "text",
        "version": 4,
        "inline_content": [
          {
            "Text": "Both "
          },
          {
            "Text": "json.Marshal",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "json.MarshalIndent",
            "AttrFlags": 2
          },
          {
            "Text": " take "
          },
          {
            "Text": "interface{}",
            "AttrFlags": 2,
            "Link": "https://www.notion.so/kjkpublic/Empty-interface-c3315892508248fdb19b663bf8bff028"
          },
          {
            "Text": " as first argument. We can pass any Go value, it’ll be wrapped into "
          },
          {
            "Text": "interface{}",
            "AttrFlags": 2
          },
          {
            "Text": " with their type."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532156109175,
        "id": "886429f5-90f8-4754-bc4e-abfd392c8ecb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532156109175,
        "parent_id": "1479bc5a-08b6-4dbb-8aa0-e2f5ed17782f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Marshaller will use reflection to inspect passed value and encode it as JSON strings."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Marshaller will use reflection to inspect passed value and encode it as JSON strings."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532156109175,
        "id": "be3865ae-1133-4559-b130-d5efe343f29b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532156109175,
        "parent_id": "1479bc5a-08b6-4dbb-8aa0-e2f5ed17782f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "When serializing structs, only exported fields (whose names start with capital letter) are serialized / deserialized."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "When serializing structs, only exported fields (whose names start with capital letter) are serialized / deserialized."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532156109176,
        "id": "ff3089dd-5958-41ca-8622-672a50fd9445",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532156109176,
        "parent_id": "1479bc5a-08b6-4dbb-8aa0-e2f5ed17782f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In our example, "
            ],
            [
              "fullName",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is not serialized."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "In our example, "
          },
          {
            "Text": "fullName",
            "AttrFlags": 2
          },
          {
            "Text": " is not serialized."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532156109176,
        "id": "da82b928-bc22-4d7c-9604-9965b1e9892b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532156109176,
        "parent_id": "1479bc5a-08b6-4dbb-8aa0-e2f5ed17782f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Structs are serialized as JSON dictionaries. By default dictionary keys are the same as struct field names."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Structs are serialized as JSON dictionaries. By default dictionary keys are the same as struct field names."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532156109176,
        "id": "9cfcd11b-5e4e-4181-aeaf-644e9c11fea1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532156109176,
        "parent_id": "1479bc5a-08b6-4dbb-8aa0-e2f5ed17782f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Struct field "
            ],
            [
              "Name",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is serialized under dictionary key "
            ],
            [
              "Name",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Struct field "
          },
          {
            "Text": "Name",
            "AttrFlags": 2
          },
          {
            "Text": " is serialized under dictionary key "
          },
          {
            "Text": "Name",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532156109177,
        "id": "b563f216-303d-4fb4-9aa9-3ecd739a750f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532156109177,
        "parent_id": "1479bc5a-08b6-4dbb-8aa0-e2f5ed17782f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "We can provide custom mappings with struct tags."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "We can provide custom mappings with struct tags."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532156109177,
        "id": "7829fb5c-eb1c-4318-96ff-b986b4daeb2e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532156109177,
        "parent_id": "1479bc5a-08b6-4dbb-8aa0-e2f5ed17782f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "We can attach arbitrary struct tags string to struct fields."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "We can attach arbitrary struct tags string to struct fields."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532156109177,
        "id": "5144bd95-41ef-446e-885f-a038eaaea95b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532156109177,
        "parent_id": "1479bc5a-08b6-4dbb-8aa0-e2f5ed17782f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "json:\"age\"",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " instructs JSON encoder / decoder to use name "
            ],
            [
              "age",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " for dictionary key representing field "
            ],
            [
              "Age",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "json:\"age\"",
            "AttrFlags": 2
          },
          {
            "Text": " instructs JSON encoder / decoder to use name "
          },
          {
            "Text": "age",
            "AttrFlags": 2
          },
          {
            "Text": " for dictionary key representing field "
          },
          {
            "Text": "Age",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532156109177,
        "id": "4f221ce7-d0d8-4e4b-9afc-aff36aaecd4d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532156109177,
        "parent_id": "1479bc5a-08b6-4dbb-8aa0-e2f5ed17782f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "When serializing structs, passing the value and a pointer to it generates the same result."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "When serializing structs, passing the value and a pointer to it generates the same result."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532156109178,
        "id": "8856257a-8034-4905-9950-3995b37e5dd3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532156109178,
        "parent_id": "1479bc5a-08b6-4dbb-8aa0-e2f5ed17782f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Passing a pointer is more efficient because passing by value creates unnecessary copy."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Passing a pointer is more efficient because passing by value creates unnecessary copy."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532156109178,
        "id": "9fb86f62-b5b3-4231-affc-b3758987428f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532156109178,
        "parent_id": "1479bc5a-08b6-4dbb-8aa0-e2f5ed17782f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "json.MarshallIndent",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " allows for pretty-printing of nested structures. The result takes up more space but is easier to read."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "json.MarshallIndent",
            "AttrFlags": 2
          },
          {
            "Text": " allows for pretty-printing of nested structures. The result takes up more space but is easier to read."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532156109178,
        "id": "98780d83-71d2-4258-9534-32fc0c535603",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532156109178,
        "parent_id": "1479bc5a-08b6-4dbb-8aa0-e2f5ed17782f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Parse JSON into a struct"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Parse JSON into a struct"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532156109178,
        "id": "09d19f0b-acdf-4718-a955-658ea5dc2ea5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532156109178,
        "parent_id": "1479bc5a-08b6-4dbb-8aa0-e2f5ed17782f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "@file json_deserialize.go output sha1:1adbbe8fa6abf4c08bf821b2b3e7db1c82ace85d goplayground:CllMvV6twjM"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "@file json_deserialize.go output sha1:1adbbe8fa6abf4c08bf821b2b3e7db1c82ace85d goplayground:CllMvV6twjM"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532156109178,
        "id": "355831c1-2cdb-4dab-97f5-d5627a0a0398",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532156109178,
        "parent_id": "1479bc5a-08b6-4dbb-8aa0-e2f5ed17782f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Parsing is the opposite of serializing."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Parsing is the opposite of serializing."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532156109178,
        "id": "fd2d1252-6cf3-467c-8843-2235c072061e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532156109178,
        "parent_id": "1479bc5a-08b6-4dbb-8aa0-e2f5ed17782f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Unlike with serializing, when parsing into structs, we must pass a pointer to struct. Otherwise "
            ],
            [
              "json.Unmarshal",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " will receive and modify a copy of the struct, not the struct itself. The copy will be then discarded after returning from "
            ],
            [
              "json.Unmarshal",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Unlike with serializing, when parsing into structs, we must pass a pointer to struct. Otherwise "
          },
          {
            "Text": "json.Unmarshal",
            "AttrFlags": 2
          },
          {
            "Text": " will receive and modify a copy of the struct, not the struct itself. The copy will be then discarded after returning from "
          },
          {
            "Text": "json.Unmarshal",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532156109179,
        "id": "8c8ecf7d-fceb-48e8-be51-470cb119126a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532156109179,
        "parent_id": "1479bc5a-08b6-4dbb-8aa0-e2f5ed17782f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Notice that JSON element "
            ],
            [
              "city",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " was decoded into "
            ],
            [
              "City",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " struct field even though the names don’t match and we didn’t provide explicit mapping with "
            ],
            [
              "json",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " struct tag."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Notice that JSON element "
          },
          {
            "Text": "city",
            "AttrFlags": 2
          },
          {
            "Text": " was decoded into "
          },
          {
            "Text": "City",
            "AttrFlags": 2
          },
          {
            "Text": " struct field even though the names don’t match and we didn’t provide explicit mapping with "
          },
          {
            "Text": "json",
            "AttrFlags": 2
          },
          {
            "Text": " struct tag."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532156109179,
        "id": "9bd56f23-6e25-4667-9486-52b0e714f7b4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532156109179,
        "parent_id": "1479bc5a-08b6-4dbb-8aa0-e2f5ed17782f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "That happened because JSON decoder has a little bit of smarts when matching dictionary key names to struct field names. It’s best to not rely on such smarts and define mappings explicitly."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "That happened because JSON decoder has a little bit of smarts when matching dictionary key names to struct field names. It’s best to not rely on such smarts and define mappings explicitly."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532156109179,
        "id": "c3a0493e-507a-486f-96e7-0f674c8496ef",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532156109179,
        "parent_id": "1479bc5a-08b6-4dbb-8aa0-e2f5ed17782f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "All struct fields are optional and when not present in JSON text their values will be untouched. When decoding into newly initialized struct their value will be zero value for a given type."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "All struct fields are optional and when not present in JSON text their values will be untouched. When decoding into newly initialized struct their value will be zero value for a given type."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532156109179,
        "id": "301d30d2-8d8f-49f7-9f1a-0ae3b66e89bb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532156109179,
        "parent_id": "1479bc5a-08b6-4dbb-8aa0-e2f5ed17782f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Field "
            ],
            [
              "Name",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " shows that JSON decoder can also automatically decode into a pointer to a value."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Field "
          },
          {
            "Text": "Name",
            "AttrFlags": 2
          },
          {
            "Text": " shows that JSON decoder can also automatically decode into a pointer to a value."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532156109180,
        "id": "45c1061c-2e23-45bc-9b15-cc287d2d51d0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532156109180,
        "parent_id": "1479bc5a-08b6-4dbb-8aa0-e2f5ed17782f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "This is useful when you need to know if a value was present in JSON or not. If we used "
            ],
            [
              "string",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " for "
            ],
            [
              "Name",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", we wouldn’t know if value of empty string means that JSON had "
            ],
            [
              "name",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " key with empty string as a value or is it because the value wasn’t there at all."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "This is useful when you need to know if a value was present in JSON or not. If we used "
          },
          {
            "Text": "string",
            "AttrFlags": 2
          },
          {
            "Text": " for "
          },
          {
            "Text": "Name",
            "AttrFlags": 2
          },
          {
            "Text": ", we wouldn’t know if value of empty string means that JSON had "
          },
          {
            "Text": "name",
            "AttrFlags": 2
          },
          {
            "Text": " key with empty string as a value or is it because the value wasn’t there at all."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532156109180,
        "id": "57b3cd2b-d3ae-45f2-9fda-806c7b13d3bc",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532156109180,
        "parent_id": "1479bc5a-08b6-4dbb-8aa0-e2f5ed17782f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "By using a pointer to a string we know that "
            ],
            [
              "nil",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " means there was no value."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "By using a pointer to a string we know that "
          },
          {
            "Text": "nil",
            "AttrFlags": 2
          },
          {
            "Text": " means there was no value."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532156109180,
        "id": "a9f59ef2-8e5e-4a6c-8461-181871b0c3de",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532156109180,
        "parent_id": "1479bc5a-08b6-4dbb-8aa0-e2f5ed17782f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Go to JSON type mapping"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Go to JSON type mapping"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532156109181,
        "id": "e9130998-17ad-41dc-a018-4b03c454246a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532156109181,
        "parent_id": "1479bc5a-08b6-4dbb-8aa0-e2f5ed17782f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "JSON Type"
            ],
            [
              "Go Concrete Type"
            ],
            [
              "boolean"
            ],
            [
              "bool"
            ],
            [
              "numbers"
            ],
            [
              "float64 or int"
            ],
            [
              "string"
            ],
            [
              "string"
            ],
            [
              "array"
            ],
            [
              "slice"
            ],
            [
              "dictionary"
            ],
            [
              "struct"
            ],
            [
              "null"
            ],
            [
              "nil"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "JSON Type"
          },
          {
            "Text": "Go Concrete Type"
          },
          {
            "Text": "boolean"
          },
          {
            "Text": "bool"
          },
          {
            "Text": "numbers"
          },
          {
            "Text": "float64 or int"
          },
          {
            "Text": "string"
          },
          {
            "Text": "string"
          },
          {
            "Text": "array"
          },
          {
            "Text": "slice"
          },
          {
            "Text": "dictionary"
          },
          {
            "Text": "struct"
          },
          {
            "Text": "null"
          },
          {
            "Text": "nil"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532156109181,
        "id": "6423a628-7609-42e0-a74c-ccb540ba1240",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1533063451439,
        "parent_id": "1479bc5a-08b6-4dbb-8aa0-e2f5ed17782f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "See more in "
            ],
            [
              "type mappings",
              [
                [
                  "a",
                  "https://www.notion.so/kjkpublic/Go-to-JSON-type-mappings-408ca6bab89f4e468d58b26a951c12d7"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 4,
        "inline_content": [
          {
            "Text": "See more in "
          },
          {
            "Text": "type mappings",
            "Link": "https://www.notion.so/kjkpublic/Go-to-JSON-type-mappings-408ca6bab89f4e468d58b26a951c12d7"
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532207498407,
        "id": "cf32c942-abcd-4685-a32b-a1ae16dd0b66",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532207498407,
        "parent_id": "1479bc5a-08b6-4dbb-8aa0-e2f5ed17782f",
        "parent_table": "block",
        "type": "text",
        "version": 6
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532156110149,
        "format": {
          "page_full_width": true,
          "page_small_text": true
        },
        "id": "cc86ac32-2701-4af0-acd1-e44f6546c43c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532207563083,
        "parent_id": "1479bc5a-08b6-4dbb-8aa0-e2f5ed17782f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Parsing arbitrary JSON documents"
            ]
          ]
        },
        "type": "page",
        "version": 21,
        "title": "Parsing arbitrary JSON documents",
        "format_page": {
          "page_cover": "",
          "page_cover_position": 0,
          "page_font": "",
          "page_full_width": true,
          "page_icon": "",
          "page_small_text": true
        }
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532156111082,
        "format": {
          "page_full_width": true,
          "page_small_text": true
        },
        "id": "4ef2f951-df5f-4c2f-a229-ddb74e372823",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532207605467,
        "parent_id": "1479bc5a-08b6-4dbb-8aa0-e2f5ed17782f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Decoding into anonymous structs"
            ]
          ]
        },
        "type": "page",
        "version": 23,
        "title": "Decoding into anonymous structs",
        "format_page": {
          "page_cover": "",
          "page_cover_position": 0,
          "page_font": "",
          "page_full_width": true,
          "page_icon": "",
          "page_small_text": true
        }
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532156112223,
        "format": {
          "page_full_width": true,
          "page_small_text": true
        },
        "id": "d349946b-5cb6-42b5-800b-7c75fe3ac9d0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532207639254,
        "parent_id": "1479bc5a-08b6-4dbb-8aa0-e2f5ed17782f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Decoding JSON from a file"
            ]
          ]
        },
        "type": "page",
        "version": 21,
        "title": "Decoding JSON from a file",
        "format_page": {
          "page_cover": "",
          "page_cover_position": 0,
          "page_font": "",
          "page_full_width": true,
          "page_icon": "",
          "page_small_text": true
        }
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532156113200,
        "format": {
          "page_full_width": true,
          "page_small_text": true
        },
        "id": "cc008efe-45c8-4e82-bfe9-dc742e3e9a20",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532207673140,
        "parent_id": "1479bc5a-08b6-4dbb-8aa0-e2f5ed17782f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Configuring JSON serialization"
            ]
          ]
        },
        "type": "page",
        "version": 23,
        "title": "Configuring JSON serialization",
        "format_page": {
          "page_cover": "",
          "page_cover_position": 0,
          "page_font": "",
          "page_full_width": true,
          "page_icon": "",
          "page_small_text": true
        }
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532156114234,
        "format": {
          "page_full_width": true,
          "page_small_text": true
        },
        "id": "468765d1-44a3-4e87-b913-c7674e66c3a4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532207703643,
        "parent_id": "1479bc5a-08b6-4dbb-8aa0-e2f5ed17782f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Custom JSON marshaling"
            ]
          ]
        },
        "type": "page",
        "version": 19,
        "title": "Custom JSON marshaling",
        "format_page": {
          "page_cover": "",
          "page_cover_position": 0,
          "page_font": "",
          "page_full_width": true,
          "page_icon": "",
          "page_small_text": true
        }
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532156115237,
        "format": {
          "page_full_width": true,
          "page_small_text": true
        },
        "id": "408ca6ba-b89f-4e46-8d58-b26a951c12d7",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532237155541,
        "parent_id": "1479bc5a-08b6-4dbb-8aa0-e2f5ed17782f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Go to JSON type mappings"
            ]
          ]
        },
        "type": "page",
        "version": 23,
        "title": "Go to JSON type mappings",
        "format_page": {
          "page_cover": "",
          "page_cover_position": 0,
          "page_font": "",
          "page_full_width": true,
          "page_icon": "",
          "page_small_text": true
        }
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532156116160,
        "format": {
          "page_full_width": true,
          "page_small_text": true
        },
        "id": "68e0d7e0-4873-427d-90f5-238c034dff66",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532207830569,
        "parent_id": "1479bc5a-08b6-4dbb-8aa0-e2f5ed17782f",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Easy generation of JSON struct definition"
            ]
          ]
        },
        "type": "page",
        "version": 27,
        "title": "Easy generation of JSON struct definition",
        "format_page": {
          "page_cover": "",
          "page_cover_position": 0,
          "page_font": "",
          "page_full_width": true,
          "page_icon": "",
          "page_small_text": true
        }
      }
    ],
    "title": "JSON",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 10
    }
  ],
  "Tables": null
}