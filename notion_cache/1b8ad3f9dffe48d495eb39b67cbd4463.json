{
  "ID": "1b8ad3f9-dffe-48d4-95eb-39b67cbd4463",
  "Root": {
    "alive": true,
    "content": [
      "67fffb10-5e6b-44ac-8db9-d394cc742e00",
      "9297d66f-5438-41bf-be5f-88f6f72fb0f0",
      "48c9157e-e9e4-4f09-bd4c-9abacae057d4",
      "730c2567-ff31-4ac6-a172-10f13896ba6b",
      "71958b2f-1d05-4f93-842f-a92be06104ad",
      "776acab3-cf73-4107-8df1-bf43093510c0",
      "045f6b91-4922-4263-979f-91899f21a92b",
      "174c9b07-2122-4ad8-ade4-1948d0a0a181",
      "adc589f7-d544-46cd-8305-624c2d80d772"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1532156183947,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "1b8ad3f9-dffe-48d4-95eb-39b67cbd4463",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1532211301353,
    "parent_id": "48f2d17d-3a76-44da-afba-f0ca9c8b61ad",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Assigning signals to a channel"
        ]
      ]
    },
    "type": "page",
    "version": 25,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532211287132,
        "id": "67fffb10-5e6b-44ac-8db9-d394cc742e00",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532211295610,
        "parent_id": "1b8ad3f9-dffe-48d4-95eb-39b67cbd4463",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "$Id: 240"
            ]
          ]
        },
        "type": "text",
        "version": 12,
        "inline_content": [
          {
            "Text": "$Id: 240"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532211289703,
        "id": "9297d66f-5438-41bf-be5f-88f6f72fb0f0",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532211291578,
        "parent_id": "1b8ad3f9-dffe-48d4-95eb-39b67cbd4463",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "$Score: 1"
            ]
          ]
        },
        "type": "text",
        "version": 12,
        "inline_content": [
          {
            "Text": "$Score: 1"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532211291578,
        "id": "48c9157e-e9e4-4f09-bd4c-9abacae057d4",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532211293408,
        "parent_id": "1b8ad3f9-dffe-48d4-95eb-39b67cbd4463",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "$SOId: 15744"
            ]
          ]
        },
        "type": "text",
        "version": 12,
        "inline_content": [
          {
            "Text": "$SOId: 15744"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532211294480,
        "id": "730c2567-ff31-4ac6-a172-10f13896ba6b",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532211294480,
        "parent_id": "1b8ad3f9-dffe-48d4-95eb-39b67cbd4463",
        "parent_table": "block",
        "type": "text",
        "version": 4
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532211293408,
        "id": "71958b2f-1d05-4f93-842f-a92be06104ad",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532211294279,
        "parent_id": "1b8ad3f9-dffe-48d4-95eb-39b67cbd4463",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Often times you will have reason to catch when your program is being told to stop by the OS and take some actions to preserve the state, or clean up your application. To accomplish this you can use the "
            ],
            [
              "os/signal",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " package from the standard library. Below is a simple example of assigning all signals from the system to a channel, and then how to react to those signals."
            ]
          ]
        },
        "type": "text",
        "version": 12,
        "inline_content": [
          {
            "Text": "Often times you will have reason to catch when your program is being told to stop by the OS and take some actions to preserve the state, or clean up your application. To accomplish this you can use the "
          },
          {
            "Text": "os/signal",
            "AttrFlags": 2
          },
          {
            "Text": " package from the standard library. Below is a simple example of assigning all signals from the system to a channel, and then how to react to those signals."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532156183946,
        "id": "776acab3-cf73-4107-8df1-bf43093510c0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532211280195,
        "parent_id": "1b8ad3f9-dffe-48d4-95eb-39b67cbd4463",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Go"
            ]
          ],
          "title": [
            [
              "package main\n\nimport (\n    \"fmt\"\n    \"os\"\n    \"os/signal\"\n)\n\nfunc main() {\n    // create a channel for os.Signal\n    sigChan := make(chan os.Signal)\n\n    // assign all signal notifications to the channel\n    signal.Notify(sigChan)\n\n    // blocks until you get a signal from the OS\n    select {\n    // when a signal is received\n    case sig := \u003c-sigChan:\n        // print this line telling us which signal was seen\n        fmt.Println(\"Received signal from OS:\", sig)\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "package main\n\nimport (\n    \"fmt\"\n    \"os\"\n    \"os/signal\"\n)\n\nfunc main() {\n    // create a channel for os.Signal\n    sigChan := make(chan os.Signal)\n\n    // assign all signal notifications to the channel\n    signal.Notify(sigChan)\n\n    // blocks until you get a signal from the OS\n    select {\n    // when a signal is received\n    case sig := \u003c-sigChan:\n        // print this line telling us which signal was seen\n        fmt.Println(\"Received signal from OS:\", sig)\n    }\n}",
        "code_language": "Go"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532156183947,
        "id": "045f6b91-4922-4263-979f-91899f21a92b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532156183947,
        "parent_id": "1b8ad3f9-dffe-48d4-95eb-39b67cbd4463",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "When you run the above script it will create a channel, and then block until that channel receives a signal."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "When you run the above script it will create a channel, and then block until that channel receives a signal."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532156183947,
        "id": "174c9b07-2122-4ad8-ade4-1948d0a0a181",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532211283144,
        "parent_id": "1b8ad3f9-dffe-48d4-95eb-39b67cbd4463",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Go"
            ]
          ],
          "title": [
            [
              "$ go run signals.go\n^CReceived signal from OS: interrupt"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "$ go run signals.go\n^CReceived signal from OS: interrupt",
        "code_language": "Go"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532156183947,
        "id": "adc589f7-d544-46cd-8305-624c2d80d772",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532156183947,
        "parent_id": "1b8ad3f9-dffe-48d4-95eb-39b67cbd4463",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The "
            ],
            [
              "^C",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " above is the keyboard command "
            ],
            [
              "CTRL+C",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " which sends the "
            ],
            [
              "SIGINT",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " signal."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "The "
          },
          {
            "Text": "^C",
            "AttrFlags": 2
          },
          {
            "Text": " above is the keyboard command "
          },
          {
            "Text": "CTRL+C",
            "AttrFlags": 2
          },
          {
            "Text": " which sends the "
          },
          {
            "Text": "SIGINT",
            "AttrFlags": 2
          },
          {
            "Text": " signal."
          }
        ]
      }
    ],
    "title": "Assigning signals to a channel",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 10
    }
  ],
  "Tables": null
}