{
  "ID": "61cffdad-6908-482c-bb53-200ad6f38105",
  "Page": {
    "alive": true,
    "content": [
      "e57efe9f-3ac6-4485-ad69-12569dce4fe3",
      "1d87220c-a9ff-4b97-91b5-2d4e6dedd841",
      "460ed28f-1a43-4a9f-b49b-b730dad91025",
      "296a2756-a55c-46ce-b272-3ccf8b29b92a",
      "46ef28aa-9868-43e4-afb4-fa44749fb83b",
      "5d3b3fe4-125c-4f5f-ab8c-e04514f44a97",
      "d3dc1f66-f3fb-41d8-92a6-e1d3bc3d23e3"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1532156195259,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "61cffdad-6908-482c-bb53-200ad6f38105",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1532211818248,
    "parent_id": "b55ab9b1-d6e5-499e-a301-4ba7e85d3efd",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Testing HTTP requests"
        ]
      ]
    },
    "type": "page",
    "version": 23,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532211802690,
        "id": "e57efe9f-3ac6-4485-ad69-12569dce4fe3",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532211805256,
        "parent_id": "61cffdad-6908-482c-bb53-200ad6f38105",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "$Id: 249"
            ]
          ]
        },
        "type": "text",
        "version": 12,
        "inline_content": [
          {
            "Text": "$Id: 249"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532211805256,
        "id": "1d87220c-a9ff-4b97-91b5-2d4e6dedd841",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532211806953,
        "parent_id": "61cffdad-6908-482c-bb53-200ad6f38105",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "$Score: 1"
            ]
          ]
        },
        "type": "text",
        "version": 12,
        "inline_content": [
          {
            "Text": "$Score: 1"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532211806953,
        "id": "460ed28f-1a43-4a9f-b49b-b730dad91025",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532211808720,
        "parent_id": "61cffdad-6908-482c-bb53-200ad6f38105",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "$SOId: 9053"
            ]
          ]
        },
        "type": "text",
        "version": 12,
        "inline_content": [
          {
            "Text": "$SOId: 9053"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532211808720,
        "id": "296a2756-a55c-46ce-b272-3ccf8b29b92a",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532211809233,
        "parent_id": "61cffdad-6908-482c-bb53-200ad6f38105",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              " "
            ],
            [
              "main.go",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 10,
        "inline_content": [
          {
            "Text": " "
          },
          {
            "Text": "main.go",
            "AttrFlags": 2
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532156195258,
        "id": "46ef28aa-9868-43e4-afb4-fa44749fb83b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532211822465,
        "parent_id": "61cffdad-6908-482c-bb53-200ad6f38105",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Go"
            ]
          ],
          "title": [
            [
              "package main\n\nimport (\n    \"fmt\"\n    \"io/ioutil\"\n    \"log\"\n    \"net/http\"\n)\n\nfunc fetchContent(url string) (string, error) {\n    res, err := http.Get(url)\n    if err != nil {\n        return \"\", nil\n    }\n    defer res.Body.Close()\n\n    body, err := ioutil.ReadAll(res.Body)\n    if err != nil {\n        return \"\", err\n    }\n    return string(body), nil\n}\n\nfunc main() {\n    url := \"https://example.com/\"\n    content, err := fetchContent(url)\n    if err != nil {\n        log.Fatal(err)\n    }\n    fmt.Println(\"Content:\", content)\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "package main\n\nimport (\n    \"fmt\"\n    \"io/ioutil\"\n    \"log\"\n    \"net/http\"\n)\n\nfunc fetchContent(url string) (string, error) {\n    res, err := http.Get(url)\n    if err != nil {\n        return \"\", nil\n    }\n    defer res.Body.Close()\n\n    body, err := ioutil.ReadAll(res.Body)\n    if err != nil {\n        return \"\", err\n    }\n    return string(body), nil\n}\n\nfunc main() {\n    url := \"https://example.com/\"\n    content, err := fetchContent(url)\n    if err != nil {\n        log.Fatal(err)\n    }\n    fmt.Println(\"Content:\", content)\n}",
        "code_language": "Go"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532156195258,
        "id": "5d3b3fe4-125c-4f5f-ab8c-e04514f44a97",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532156195258,
        "parent_id": "61cffdad-6908-482c-bb53-200ad6f38105",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "main_test.go",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ":"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "main_test.go",
            "AttrFlags": 2
          },
          {
            "Text": ":"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532156195259,
        "id": "d3dc1f66-f3fb-41d8-92a6-e1d3bc3d23e3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532211827103,
        "parent_id": "61cffdad-6908-482c-bb53-200ad6f38105",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Go"
            ]
          ],
          "title": [
            [
              "package main\n\nimport (\n    \"fmt\"\n    \"net/http\"\n    \"net/http/httptest\"\n    \"testing\"\n)\n\nfunc Test_fetchContent(t *testing.T) {\n    ts := httptest.NewServer(http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {\n        fmt.Fprint(w, \"hello world\")\n    }))\n    defer ts.Close()\n\n    content, err := fetchContent(ts.URL)\n    if err != nil {\n        t.Error(err)\n    }\n\n    want := \"hello world\"\n    if content != want {\n        t.Errorf(\"Got %q, want %q\", content, want)\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "package main\n\nimport (\n    \"fmt\"\n    \"net/http\"\n    \"net/http/httptest\"\n    \"testing\"\n)\n\nfunc Test_fetchContent(t *testing.T) {\n    ts := httptest.NewServer(http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {\n        fmt.Fprint(w, \"hello world\")\n    }))\n    defer ts.Close()\n\n    content, err := fetchContent(ts.URL)\n    if err != nil {\n        t.Error(err)\n    }\n\n    want := \"hello world\"\n    if content != want {\n        t.Errorf(\"Got %q, want %q\", content, want)\n    }\n}",
        "code_language": "Go"
      }
    ],
    "title": "Testing HTTP requests",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 10
    }
  ],
  "Collections": null,
  "CollectionViews": null
}