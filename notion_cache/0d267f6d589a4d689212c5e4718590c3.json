{
  "ID": "0d267f6d-589a-4d68-9212-c5e4718590c3",
  "Page": {
    "alive": true,
    "content": [
      "7f412fbe-661a-4ebd-ac0f-008aa3528de5",
      "ea9c539e-4f3b-4ace-99c7-ed105af47526",
      "ec603c46-b22b-459e-b3d2-faa0bc982383",
      "ed3621cc-2050-48ff-a576-b149e4d9175f",
      "315e4016-760b-4dd7-a9b0-40af47bfef3e",
      "d1bf2237-b7ae-4070-a0ef-21df06582666",
      "a7c30cfd-4020-4946-8f77-3d5092f0f659",
      "c20ce2eb-749e-410c-9327-1c1b8c41a5e1",
      "4e5f23ff-1e4a-4932-98d0-ef49f11992ea",
      "db6be6f1-ca3e-4230-8aea-71ea5193ac5e",
      "b3df9743-b933-4042-abe5-93fee4691bf1",
      "ea92a137-a201-4e73-957a-6bbe46790383",
      "a4770d27-97cc-448b-9327-6bb5a32f64ca",
      "8e5584ac-d47e-4f61-9c45-f0fc42df5543",
      "c6ff0d03-1fc3-41a9-a4dd-b6060f68b8df",
      "d845f4b2-1a72-46ea-a138-1a0cfbb4d46c",
      "d5d3b368-f04f-4e71-8127-c8d6325ea1c0",
      "9fd92f77-a703-480b-a335-85c8ae74da58",
      "7cbbd26d-c313-4949-914c-f907432361de",
      "501d6070-019a-480c-bf43-02c74c305b9a",
      "bf746c98-5bd8-484f-a034-1e0c823cb999",
      "2c6491dc-bb11-45ca-b4d5-0ae9ebc887aa",
      "6422a43d-701c-4622-b81b-3751386c9cb9",
      "4532bf27-5c36-41d3-b0a8-81ca963fb604",
      "03cd9902-49cf-41b6-8663-d65a5ed0c8fd"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1532156278243,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "0d267f6d-589a-4d68-9212-c5e4718590c3",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1532215153165,
    "parent_id": "c84a4530-4ec3-4980-81c6-7aa1ea0d9c49",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Loading and saving image"
        ]
      ]
    },
    "type": "page",
    "version": 28,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532215138442,
        "id": "7f412fbe-661a-4ebd-ac0f-008aa3528de5",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532215154245,
        "parent_id": "0d267f6d-589a-4d68-9212-c5e4718590c3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "$Id: 317"
            ]
          ]
        },
        "type": "text",
        "version": 12,
        "inline_content": [
          {
            "Text": "$Id: 317"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532215139931,
        "id": "ea9c539e-4f3b-4ace-99c7-ed105af47526",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532215154908,
        "parent_id": "0d267f6d-589a-4d68-9212-c5e4718590c3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "$Score: 0"
            ]
          ]
        },
        "type": "text",
        "version": 12,
        "inline_content": [
          {
            "Text": "$Score: 0"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532215142101,
        "id": "ec603c46-b22b-459e-b3d2-faa0bc982383",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532215155796,
        "parent_id": "0d267f6d-589a-4d68-9212-c5e4718590c3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "$SOId: 31686"
            ]
          ]
        },
        "type": "text",
        "version": 12,
        "inline_content": [
          {
            "Text": "$SOId: 31686"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532215145070,
        "id": "ed3621cc-2050-48ff-a576-b149e4d9175f",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532215145070,
        "parent_id": "0d267f6d-589a-4d68-9212-c5e4718590c3",
        "parent_table": "block",
        "type": "text",
        "version": 4
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532215143787,
        "id": "315e4016-760b-4dd7-a9b0-40af47bfef3e",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532215144597,
        "parent_id": "0d267f6d-589a-4d68-9212-c5e4718590c3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In memory, an image can be seen as a matrix of pixel (color). However, when an image being stored in a permanent storage, it may be stored as is (RAW format), "
            ],
            [
              "Bitmap",
              [
                [
                  "a",
                  "https://en.wikipedia.org/wiki/Bitmap"
                ]
              ]
            ],
            [
              " or other image formats with particular compression algorithm for saving storage space, e.g. PNG, JPEG, GIF, etc. When loading an image with particular format, the image must be "
            ],
            [
              "decoded",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " to "
            ],
            [
              "image.Image",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " with corresponding algorithm. An "
            ],
            [
              "image.Decode",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "https://golang.org/pkg/image/#Decode"
                ]
              ]
            ],
            [
              " function declared as"
            ]
          ]
        },
        "type": "text",
        "version": 12,
        "inline_content": [
          {
            "Text": "In memory, an image can be seen as a matrix of pixel (color). However, when an image being stored in a permanent storage, it may be stored as is (RAW format), "
          },
          {
            "Text": "Bitmap",
            "Link": "https://en.wikipedia.org/wiki/Bitmap"
          },
          {
            "Text": " or other image formats with particular compression algorithm for saving storage space, e.g. PNG, JPEG, GIF, etc. When loading an image with particular format, the image must be "
          },
          {
            "Text": "decoded",
            "AttrFlags": 4
          },
          {
            "Text": " to "
          },
          {
            "Text": "image.Image",
            "AttrFlags": 2
          },
          {
            "Text": " with corresponding algorithm. An "
          },
          {
            "Text": "image.Decode",
            "AttrFlags": 2,
            "Link": "https://golang.org/pkg/image/#Decode"
          },
          {
            "Text": " function declared as"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532156278236,
        "id": "d1bf2237-b7ae-4070-a0ef-21df06582666",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532215160658,
        "parent_id": "0d267f6d-589a-4d68-9212-c5e4718590c3",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Go"
            ]
          ],
          "title": [
            [
              "func Decode(r io.Reader) (Image, string, error)"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "func Decode(r io.Reader) (Image, string, error)",
        "code_language": "Go"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532156278237,
        "id": "a7c30cfd-4020-4946-8f77-3d5092f0f659",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532156278237,
        "parent_id": "0d267f6d-589a-4d68-9212-c5e4718590c3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "is provided for this particular usage. In order to be able to handle various image formats, prior to calling the "
            ],
            [
              "image.Decode",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " function, the decoder must be registered through "
            ],
            [
              "image.RegisterFormat",
              [
                [
                  "c"
                ],
                [
                  "a",
                  "https://golang.org/pkg/image/#RegisterFormat"
                ]
              ]
            ],
            [
              " function defined as"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "is provided for this particular usage. In order to be able to handle various image formats, prior to calling the "
          },
          {
            "Text": "image.Decode",
            "AttrFlags": 2
          },
          {
            "Text": " function, the decoder must be registered through "
          },
          {
            "Text": "image.RegisterFormat",
            "AttrFlags": 2,
            "Link": "https://golang.org/pkg/image/#RegisterFormat"
          },
          {
            "Text": " function defined as"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532156278237,
        "id": "c20ce2eb-749e-410c-9327-1c1b8c41a5e1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532215162887,
        "parent_id": "0d267f6d-589a-4d68-9212-c5e4718590c3",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Go"
            ]
          ],
          "title": [
            [
              "func RegisterFormat(name, magic string,\n    decode func(io.Reader) (Image, error), decodeConfig func(io.Reader) (Config, error))"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "func RegisterFormat(name, magic string,\n    decode func(io.Reader) (Image, error), decodeConfig func(io.Reader) (Config, error))",
        "code_language": "Go"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532156278240,
        "id": "4e5f23ff-1e4a-4932-98d0-ef49f11992ea",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532156278240,
        "parent_id": "0d267f6d-589a-4d68-9212-c5e4718590c3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Currently, the image package supports three file formats: "
            ],
            [
              "JPEG",
              [
                [
                  "a",
                  "https://golang.org/pkg/image/jpeg/"
                ]
              ]
            ],
            [
              ", "
            ],
            [
              "GIF",
              [
                [
                  "a",
                  "https://golang.org/pkg/image/gif/"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "PNG",
              [
                [
                  "a",
                  "https://golang.org/pkg/image/png/"
                ]
              ]
            ],
            [
              ". To register a decoder, add the following"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Currently, the image package supports three file formats: "
          },
          {
            "Text": "JPEG",
            "Link": "https://golang.org/pkg/image/jpeg/"
          },
          {
            "Text": ", "
          },
          {
            "Text": "GIF",
            "Link": "https://golang.org/pkg/image/gif/"
          },
          {
            "Text": " and "
          },
          {
            "Text": "PNG",
            "Link": "https://golang.org/pkg/image/png/"
          },
          {
            "Text": ". To register a decoder, add the following"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532156278240,
        "id": "db6be6f1-ca3e-4230-8aea-71ea5193ac5e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532215165721,
        "parent_id": "0d267f6d-589a-4d68-9212-c5e4718590c3",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Go"
            ]
          ],
          "title": [
            [
              "import _ \"image/jpeg\"    //register JPEG decoder"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "import _ \"image/jpeg\"    //register JPEG decoder",
        "code_language": "Go"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532156278241,
        "id": "b3df9743-b933-4042-abe5-93fee4691bf1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532156278241,
        "parent_id": "0d267f6d-589a-4d68-9212-c5e4718590c3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "to the application’s "
            ],
            [
              "main",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " package. Somewhere in your code (not necessary in "
            ],
            [
              "main",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " package), to load a JPEG image, use the following snippets:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "to the application’s "
          },
          {
            "Text": "main",
            "AttrFlags": 2
          },
          {
            "Text": " package. Somewhere in your code (not necessary in "
          },
          {
            "Text": "main",
            "AttrFlags": 2
          },
          {
            "Text": " package), to load a JPEG image, use the following snippets:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532156278241,
        "id": "ea92a137-a201-4e73-957a-6bbe46790383",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532215169008,
        "parent_id": "0d267f6d-589a-4d68-9212-c5e4718590c3",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Go"
            ]
          ],
          "title": [
            [
              "f, err := os.Open(\"inputimage.jpg\")\nif err != nil {\n    log.Fatalf(\"os.Open() failed with %s\\n\", err)\n}\ndefer f.Close()\n\nimg, fmtName, err := image.Decode(f)\nif err != nil {\n    log.Fatalf(\"image.Decode() failed with %s\\n\", err)\n}\n\n// `fmtName` contains the name used during format registration\n// Work with `img` ..."
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "f, err := os.Open(\"inputimage.jpg\")\nif err != nil {\n    log.Fatalf(\"os.Open() failed with %s\\n\", err)\n}\ndefer f.Close()\n\nimg, fmtName, err := image.Decode(f)\nif err != nil {\n    log.Fatalf(\"image.Decode() failed with %s\\n\", err)\n}\n\n// `fmtName` contains the name used during format registration\n// Work with `img` ...",
        "code_language": "Go"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532156278241,
        "id": "a4770d27-97cc-448b-9327-6bb5a32f64ca",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532156278241,
        "parent_id": "0d267f6d-589a-4d68-9212-c5e4718590c3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Save to PNG"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Save to PNG"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532156278241,
        "id": "8e5584ac-d47e-4f61-9c45-f0fc42df5543",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532156278241,
        "parent_id": "0d267f6d-589a-4d68-9212-c5e4718590c3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "To save an image into particular format, the corresponding "
            ],
            [
              "encoder",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              " must be imported explicitly, i.e."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "To save an image into particular format, the corresponding "
          },
          {
            "Text": "encoder",
            "AttrFlags": 4
          },
          {
            "Text": " must be imported explicitly, i.e."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532156278242,
        "id": "c6ff0d03-1fc3-41a9-a4dd-b6060f68b8df",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532215171309,
        "parent_id": "0d267f6d-589a-4d68-9212-c5e4718590c3",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Go"
            ]
          ],
          "title": [
            [
              "import \"image/png\"    //needed to use `png` encoder"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "import \"image/png\"    //needed to use `png` encoder",
        "code_language": "Go"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532156278242,
        "id": "d845f4b2-1a72-46ea-a138-1a0cfbb4d46c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532156278242,
        "parent_id": "0d267f6d-589a-4d68-9212-c5e4718590c3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "then an image can be saved with the following snippets:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "then an image can be saved with the following snippets:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532156278242,
        "id": "d5d3b368-f04f-4e71-8127-c8d6325ea1c0",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532215174384,
        "parent_id": "0d267f6d-589a-4d68-9212-c5e4718590c3",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Go"
            ]
          ],
          "title": [
            [
              "f, err := os.Create(\"outimage.png\")\nif err != nil {\n    log.Fatalf(\"os.Create() failed with %s\\n\", err)\n}\ndefer f.Close()\n\n// Encode to `PNG` with `DefaultCompression` level\n// then save to file\nerr = png.Encode(f, img)\nif err != nil {\n    log.Fatalf(\"png.Encode() failed with %s\\n\", err)\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "f, err := os.Create(\"outimage.png\")\nif err != nil {\n    log.Fatalf(\"os.Create() failed with %s\\n\", err)\n}\ndefer f.Close()\n\n// Encode to `PNG` with `DefaultCompression` level\n// then save to file\nerr = png.Encode(f, img)\nif err != nil {\n    log.Fatalf(\"png.Encode() failed with %s\\n\", err)\n}",
        "code_language": "Go"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532156278242,
        "id": "9fd92f77-a703-480b-a335-85c8ae74da58",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532156278242,
        "parent_id": "0d267f6d-589a-4d68-9212-c5e4718590c3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If you want to specify compression level other than "
            ],
            [
              "DefaultCompression",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " level, create an "
            ],
            [
              "encoder",
              [
                [
                  "i"
                ]
              ]
            ],
            [
              ", e.g."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If you want to specify compression level other than "
          },
          {
            "Text": "DefaultCompression",
            "AttrFlags": 2
          },
          {
            "Text": " level, create an "
          },
          {
            "Text": "encoder",
            "AttrFlags": 4
          },
          {
            "Text": ", e.g."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532156278242,
        "id": "7cbbd26d-c313-4949-914c-f907432361de",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532215179570,
        "parent_id": "0d267f6d-589a-4d68-9212-c5e4718590c3",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Go"
            ]
          ],
          "title": [
            [
              "enc := png.Encoder{\n    CompressionLevel: png.BestSpeed,\n}\nerr := enc.Encode(f, img)"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "enc := png.Encoder{\n    CompressionLevel: png.BestSpeed,\n}\nerr := enc.Encode(f, img)",
        "code_language": "Go"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532156278242,
        "id": "501d6070-019a-480c-bf43-02c74c305b9a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532156278242,
        "parent_id": "0d267f6d-589a-4d68-9212-c5e4718590c3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Save to JPEG"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Save to JPEG"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532156278243,
        "id": "bf746c98-5bd8-484f-a034-1e0c823cb999",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532156278243,
        "parent_id": "0d267f6d-589a-4d68-9212-c5e4718590c3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "To save to "
            ],
            [
              "jpeg",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " format, use the following:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "To save to "
          },
          {
            "Text": "jpeg",
            "AttrFlags": 2
          },
          {
            "Text": " format, use the following:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532156278243,
        "id": "2c6491dc-bb11-45ca-b4d5-0ae9ebc887aa",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532215183899,
        "parent_id": "0d267f6d-589a-4d68-9212-c5e4718590c3",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Go"
            ]
          ],
          "title": [
            [
              "import \"image/jpeg\"\n\n// Somewhere in the same package\nf, err := os.Create(\"outimage.jpg\")\nif err != nil {\n    log.Fatalf(\"os.Create() failed with %s\\n\", err)\n}\ndefer f.Close()\n\n// Specify the quality, between 0-100\n// Higher is better\nopt := jpeg.Options{\n    Quality: 90,\n}\nerr = jpeg.Encode(f, img, \u0026opt)\nif err != nil {\n    log.Fatalf(\"jpeg.Encode() failed with %s\\n\", err)\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "import \"image/jpeg\"\n\n// Somewhere in the same package\nf, err := os.Create(\"outimage.jpg\")\nif err != nil {\n    log.Fatalf(\"os.Create() failed with %s\\n\", err)\n}\ndefer f.Close()\n\n// Specify the quality, between 0-100\n// Higher is better\nopt := jpeg.Options{\n    Quality: 90,\n}\nerr = jpeg.Encode(f, img, \u0026opt)\nif err != nil {\n    log.Fatalf(\"jpeg.Encode() failed with %s\\n\", err)\n}",
        "code_language": "Go"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532156278243,
        "id": "6422a43d-701c-4622-b81b-3751386c9cb9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532156278243,
        "parent_id": "0d267f6d-589a-4d68-9212-c5e4718590c3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Save to GIF"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Save to GIF"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532156278243,
        "id": "4532bf27-5c36-41d3-b0a8-81ca963fb604",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532156278243,
        "parent_id": "0d267f6d-589a-4d68-9212-c5e4718590c3",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "To save the image to GIF file, use the following snippets."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "To save the image to GIF file, use the following snippets."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1532156278243,
        "id": "03cd9902-49cf-41b6-8663-d65a5ed0c8fd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532215187119,
        "parent_id": "0d267f6d-589a-4d68-9212-c5e4718590c3",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Go"
            ]
          ],
          "title": [
            [
              "import \"image/gif\"\n\n// Samewhere in the same package\nf, err := os.Create(\"outimage.gif\")\nif err != nil {\n    log.Fatalf(\"os.Create() failed with %s\\n\", err)\n}\ndefer f.Close()\n\nopt := gif.Options {\n    NumColors: 256,\n    // Add more parameters as needed\n}\n\nerr = gif.Encode(f, img, \u0026opt)\nif err != nil {\n    log.Fatalf(\"gif.Encode() failed with %s\\n\", err)\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "import \"image/gif\"\n\n// Samewhere in the same package\nf, err := os.Create(\"outimage.gif\")\nif err != nil {\n    log.Fatalf(\"os.Create() failed with %s\\n\", err)\n}\ndefer f.Close()\n\nopt := gif.Options {\n    NumColors: 256,\n    // Add more parameters as needed\n}\n\nerr = gif.Encode(f, img, \u0026opt)\nif err != nil {\n    log.Fatalf(\"gif.Encode() failed with %s\\n\", err)\n}",
        "code_language": "Go"
      }
    ],
    "title": "Loading and saving image",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 10
    }
  ],
  "Collections": null,
  "CollectionViews": null
}